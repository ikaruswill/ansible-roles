# Use '#' to comment out any line, add new drives with the first column
# providing the drive type and then drive details separated by tab characters.
#
# All algorithms in /proc/crypto are supported but only lzo-rle, lzo, lz4, and
# zstd have zramctl text strings; lzo-rle is the fastest with zstd having much
# better text compression.
#
# mem_limit is the compressed memory limit and will set a hard memory limit for
# the system admin. Set to 0 to disable the mem_limit.
#
# disk_size is the maximum size of the uncompressed memory. It should be set to
# roughly 150% of mem_limit depending on the algorithm and how compressible the
# input files are. Don't make it much higher than the compression algorithm
# (and the additional zram overhead) is capable of because there is a ~0.1%
# memory overhead when empty.
#
# swap_priority will set zram over alternative swap devices.
#
# page-cluster 0 means tuning to singular pages rather than the default 3 which
# caches 8 for HDD tuning, which can lower latency.
#
# swappiness 150 because the improved performance of zram allows more usage
# without any adverse affects from the default of 60. It can be raised up to 200
# which will improve performance in high memory pressure situations.
#
# target_dir is the directory you wish to hold in zram, and the original will be
# moved to a bind mount 'bind_dir' and is synchronized on start, stop, and write
# commands.
#
# bind_dir is the directory where the original directory will be mounted for
# sync purposes. Usually in '/opt' or '/var', name optional.
#
# oldlog_dir will enable log-rotation to an off device directory while retaining
# only live logs in zram. Usually in '/opt' or '/var', name optional.
#
# If you need multiple zram swaps or zram directories, just create another entry
# in this file. To do this simply add the new entries to this file, if you need
# to edit an active zram device you must stop zram with
# 'sudo systemctl stop zram-config.service' on Debian or
# 'sudo rc-service zram-config stop' on Alpine and then edit any entries you
# need to. Once finished, start zram using
# 'sudo systemctl start zram-config.service' or
# 'sudo rc-service zram-config start' which will only add the new entries if
# zram is already running.

{% if zram_swap is defined %}
# swap	alg		mem_limit	disk_size	swap_priority	page-cluster	swappiness
  swap	{{ zram_swap.alg }}		{{ zram_swap.mem_limit }}		{{ zram_swap.disk_size }}		{{ zram_swap.swap_priority | default(zram_swap_default_swap_priority) }}		{{ zram_swap.page_cluster | default(zram_swap_default_page_cluster) }}		{{ zram_swap.swappiness | default(zram_swap_default_swappiness) }}
{% endif %}

{% if zram_log is defined %}
# log	alg		mem_limit	disk_size	target_dir		bind_dir		oldlog_dir
  log	{{ zram_log.alg }}		{{ zram_log.mem_limit }}		{{ zram_log.disk_size }}		{{ zram_log.target_dir | default(zram_log_default_target_dir) }}	{{ zram_log.bind_dir | default(zram_log_default_bind_dir) }}	{{ zram_log.oldlog_dir | default(zram_log_default_oldlog_dir) }}
{% endif %}

{% if zram_extra_devices is defined %}
{% for dev in zram_extra_devices %}
{% if dev.type == 'swap' %}
# swap	alg		mem_limit	disk_size	swap_priority	page-cluster	swappiness
  swap	{{ dev.alg }}		{{ dev.mem_limit }}		{{ dev.disk_size }}		{{ dev.swap_priority | default(zram_swap_default_swap_priority) }}		{{ dev.page_cluster | default(zram_swap_default_page_cluster) }}		{{ dev.swappiness | default(zram_swap_default_swappiness) }}

{% elif dev.type == 'log' %}
# log	alg		mem_limit	disk_size	target_dir		bind_dir		oldlog_dir
  log	{{ dev.alg }}		{{ dev.mem_limit }}		{{ dev.disk_size }}		{{ dev.target_dir | default(zram_log_default_target_dir) }}	{{ dev.bind_dir | default(zram_log_default_bind_dir) }}	{{ dev.oldlog_dir | default(zram_log_default_oldlog_dir) }}

{% elif dev.type == 'dir' %}
# dir	alg		mem_limit	disk_size	target_dir		bind_dir
  dir	{{ dev.alg }}		{{ dev.mem_limit }}		{{ dev.disk_size }}		{{ dev.target_dir }}	{{ dev.bind_dir }}

{% endif %}
{% endfor %}
{% endif %}